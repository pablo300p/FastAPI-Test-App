#DOCUMENTATION URL
https://fastapi.tiangolo.com/

#CREATE VIRTUAL ENVIRONMENT
py -3 -m venv <Environment Name>

#ACTIVATE ENVIRONMENT
venv\Scripts\activate.bat

#INSTALL THE PACKAGE
pip install fastapi[All]

#RUN WEB SERVER
uvicorn app.main:app --reload

#CHECK THE AUTOGENERATED API DOCUMENTATION
http://127.0.0.1:8000/docs
or
http://127.0.0.1:8000/redoc

#CHECK ALL THE PACKAGES INSTALLED
pip freeze

#POSTGRESS DB SUPERUSER PASSWORD ALSO FOR pgadmin
$<password used>  Port: 5432

#THIS LIBRARY HAS TO BE DOWNGRADED DUE TO A PACKAGE THAT NO LONGER EXIST
pip install bcrypt==4.0.1

#THIS PACKAGE GENERATE THE TOKEN
pip install python-jose[cryptography]

#THIS LIBRARY IS FOR DATABASE MIGRATIONS(CHECK THE MODEL IN THE CODE AND CREATE ALSO SAVING VERSIONS IN CASE O A ROLLBACK NEEDED)
pip install alembic
alembic --help

#COMMAND TO CREATE A REVISION FILE THAT WILL THE FUNCTIOS DOWNGRADE AND UPDGRADE
alembic revision -m "create posts table"

#COMMAND TO UPDATE TO A NEW REVISION FILE THAT COULD HAVE NEW COLUMNS
alembic upgrade <file revision id> or head

#COMMAND TO UPDATE TO AN OLD REVISION FILE WITHOUT THE CHANGES
alembic downgrade <file revision id>

#COMMAND TO AUTOGENERATE THE MODEL BASED ON THE FILE models.py 
alembic revision --autogenerate -m "auto-vote"

#COMMAND TO SEND REQUEST FROM WEB BROWSER
fetch('http://localhost:8000/').then(res => res.json()).then(console.log)
<<<<<<< HEAD

#INITIALIZE GIT
git init
git add --all
git commit -m "Initial Commit"
git branch -M main
git remote add origin https://github.com/pablo300p/test-fastapi.git
git push -u origin main

#SET APP IN AWS
aws opsworks create-app \
    --region us-east-2 \
    --name fastapi1 \
    --type other \
    --app-source Type=git,Url=https://github.com/pablo300p/test-fastapi,Revision=version1
=======
>>>>>>> refs/remotes/origin/main
