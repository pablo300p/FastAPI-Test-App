AWSTemplateFormatVersion: '2010-09-09'
Description: Stack for FastAPI app with EC2, RDS PostgreSQL, and Application Load Balancer

Parameters:
  InstanceType:
    Type: String
    Default: t2.micro
    Description: EC2 instance type for FastAPI application

  DBUsername:
    Type: String
    Default: admin
    Description: PostgreSQL Database Username

  DBPassword:
    Type: String
    Description: PostgreSQL Database Password
    NoEcho: true

  DBName:
    Type: String
    Default: fastapidb
    Description: PostgreSQL Database Name

  VpcId:
    Type: AWS::EC2::VPC::Id
    Description: The VPC ID where resources will be created.

Resources:
  FastApiInstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow HTTP and RDS access
      VpcId: !Ref VpcId  # Reference the parameter you created
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 5432
          ToPort: 5432
          CidrIp: 0.0.0.0/0

  FastApiInstance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !Ref InstanceType
      SecurityGroups:
        - FastApi-ALBSecurityGroup
      ImageId: ami-0ddc798b3f1a5117e  # Update with a valid Amazon Linux or Ubuntu AMI for us-east-1
      KeyName: fastapi-key-pair  # Replace with your EC2 KeyPair
      UserData: 
        Fn::Base64: 
          Fn::Sub: |
            #!/bin/bash
            yum update -y
            yum install -y python3-pip git
            pip3 install fastapi uvicorn psycopg2-binary

            # Setting environment variables
            export DATABASE_HOSTNAME=your-db-hostname
            export DATABASE_PORT=5432
            export DATABASE_PASSWORD=${DBPassword}
            export DATABASE_NAME=${DBName}
            export DATABASE_USERNAME=${DBUsername}
            export SECRET_KEY=09d25e094faa6ca2556c818166b7a9563b93f7099f6f0f4caa6cf63b88e8d3e7
            export ALGORITHM=HS256
            export ACCESS_TOKEN_EXPIRE_MINUTES=60

            # Clone the repository and navigate to app folder
            git clone https://github.com/pablo300p/test-fastapi
            cd test-fastapi  # Adjust if necessary

            # Start the FastAPI application using Uvicorn
            uvicorn main:app --host 0.0.0.0 --port 80

  DatabaseSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow database access from EC2 instance
      VpcId: !Ref VpcId  # Reference the parameter you created
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 5432
          ToPort: 5432
          SourceSecurityGroupId: sg-06e16232e76bd2719

  PostgreSQLDatabase:
    Type: AWS::RDS::DBInstance
    Properties:
      DBInstanceClass: db.t3.micro
      Engine: postgres
      MasterUsername: !Ref DBUsername
      MasterUserPassword: !Ref DBPassword
      AllocatedStorage: 20
      DBName: !Ref DBName
      VPCSecurityGroups:
        - !Ref DatabaseSecurityGroup

  ALBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for ALB
      VpcId: !Ref VpcId  # Reference the parameter you created
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0

  ApplicationLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer

    Properties:

      Name: FastApiLoadBalancer
      Scheme: internet-facing
      SecurityGroups:
        - !Ref ALBSecurityGroup
      Subnets:
        - subnet-0d28ac14239b7e7ab
        - subnet-0c16720ab2eafc49f  # Update with your subnets

  ALBTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: FastApiTargetGroup
      Port: 80
      Protocol: HTTP
      VpcId: !Ref VpcId  # Reference the parameter you created